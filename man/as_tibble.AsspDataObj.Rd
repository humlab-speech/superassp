% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ssff.R
\name{as_tibble.AsspDataObj}
\alias{as_tibble.AsspDataObj}
\title{Convert an AsspDataObj to a tibble}
\usage{
\method{as_tibble}{AsspDataObj}(x, field = NULL, start = 0, na.zeros = TRUE)
}
\arguments{
\item{x}{An object of class \code{AsspDataObj} (usually created by calling \link[wrassp:read.AsspDataObj]{wrassp::read.AsspDataObj})}

\item{field}{An optional argument indicating either the field name or field index number to extract. If not given (NULL), all fields will be extracted.}

\item{start}{The start time of the portition of the SSFF track that was converted to a tibble. Defaults to zero (0) which means that the extracted portion is expected to start at the beginning of the signal.}

\item{na.zeros}{Replace all zero (0) values in the track data columns with \code{NA} value? Defaults to \code{TRUE} so that subsequent applications of summary statistics functions do not risk confusing the zero values as actual measurements.}
}
\value{
A \link[tibble:tibble]{tibble::tibble} containing columns \code{timed_orig}, \code{times_rel}, \code{times_norm}, followed by one column for each track and track field (separated by '_')
that is, if the user has chosen to convert the output of \link[wrassp:forest]{wrassp::forest} to a tibble, then the tibble will have columns \verb{times_orig times_rel times_norm  fm_1  fm_2  fm_3  fm_4  bw_1  bw_2  bw_3  bw_4}.
If the user only wanted the first field (or the "fm" field), then the output tibble will have columns \verb{times_orig times_rel times_norm  fm_1  fm_2  fm_3  fm_4}.
}
\description{
This function converts an \code{AsspDataObj} to \link[tibble:as_tibble]{tibble::as_tibble} form.
}
\details{
This function redefines the \link[tibble:as_tibble]{tibble::as_tibble} method for \code{AsspDataObj} so that
the output columns works well with \link[reindeer:quantify]{reindeer::quantify} and to replicate the output of \link[emuR:get_trackdata]{emuR::get_trackdata}.

Contrary to \link[emuR:get_trackdata]{emuR::get_trackdata} this function assumes that track data that are exactly zero (0) are actually missing measurements,
acknowleging that this is how missing measurements are stored in the SSFF file format. The user should supply an argument \code{na.zeros=FALSE} if
that assumption is risky in the SSFF file that is processed.
}
