% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/python_ssff.R
\name{kaldi_pitch}
\alias{kaldi_pitch}
\title{Estimate pitch using the Kaldi modifies version of RAPT}
\usage{
kaldi_pitch(
  listOfFiles,
  beginTime = 0,
  endTime = 0,
  windowShift = 5,
  minF = 70,
  maxF = 200,
  voicing.threshold = 0.3,
  explicitExt = "kap",
  outputDirectory = NULL,
  toFile = TRUE,
  conda.env = NULL
)
}
\arguments{
\item{listOfFiles}{A vector of file paths to wav files.}

\item{beginTime}{The start time of the section of the sound file that should be processed.}

\item{endTime}{The end time of the section of the sound file that should be processed.}

\item{windowShift}{The measurement interval (frame duration), in seconds.}

\item{minF}{Candidate f0 frequencies below this frequency will not be considered.}

\item{maxF}{Candidates above this frequency will be ignored.}

\item{voicing.threshold}{Voice/unvoiced threshold. Default is 0.3.}

\item{explicitExt}{the file extension that should be used.}

\item{outputDirectory}{set an explicit directory for where the signal file will be written. If not defined, the file will be written to the same directory as the sound file.}

\item{toFile}{write the output to a file? The file will be written in  \code{outputDirectory}, if defined, or in the same directory as the soundfile.}

\item{conda.env}{The name of the conda environment in which Python and its required packages are stored. Please make sure that you know what you are doing if you change this.}
}
\value{
An SSFF track object containing two tracks (f0 and corr) that are
either returned (toFile == FALSE) or stored on disk.
}
\description{
The algorithm used is a version of the \link[=rapt]{RAPT} algorithm
that considers voicing also in voiceless frames and conputes a
Normalized Cross Correlation Function (NCCF) that can be used to
estimate the probability of voicing \insertCite{Ghahremani.2014.10.1109/icassp.2014.6854049}{superassp}.
}
\details{
The function calls the \href{https://github.com/pytorch/audio}{torchaudio} \insertCite{yang2021torchaudio}{superassp} library to do the pitch estimates and therefore
relies on it being present in a properly set up python environment to work.
}
\references{
\insertAllCited{}
}
\seealso{
rapt
}
