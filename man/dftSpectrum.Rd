% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dftSpectrum.R, R/wrassp_re-export.R
\name{dftSpectrum}
\alias{dftSpectrum}
\title{dftSpectrum}
\usage{
dftSpectrum(
  listOfFiles = NULL,
  optLogFilePath = NULL,
  beginTime = 0,
  centerTime = FALSE,
  endTime = 0,
  resolution = 40,
  fftLength = 0,
  windowShift = 5,
  window = "BLACKMAN",
  bandwidth = 0,
  toFile = TRUE,
  explicitExt = NULL,
  outputDirectory = NULL,
  forceToLog = useWrasspLogger,
  verbose = TRUE
)

dftSpectrum(
  listOfFiles = NULL,
  optLogFilePath = NULL,
  beginTime = 0,
  centerTime = FALSE,
  endTime = 0,
  resolution = 40,
  fftLength = 0,
  windowShift = 5,
  window = "BLACKMAN",
  bandwidth = 0,
  toFile = TRUE,
  explicitExt = NULL,
  outputDirectory = NULL,
  forceToLog = useWrasspLogger,
  verbose = TRUE
)
}
\arguments{
\item{listOfFiles}{vector of file paths to be processed by function}

\item{optLogFilePath}{path to option log file}

\item{beginTime}{= \if{html}{\out{<time>}}: set begin of analysis interval to \if{html}{\out{<time>}} seconds
(default: begin of data)}

\item{centerTime}{= \if{html}{\out{<time>}}: set single-frame analysis with the analysis
window centred at \if{html}{\out{<time>}} seconds; overrules beginTime, endTime and
windowShift options}

\item{endTime}{= \if{html}{\out{<time>}}: set end of analysis interval to \if{html}{\out{<time>}} seconds
(default: end of data)}

\item{resolution}{= \if{html}{\out{<freq>}}: set FFT length to the smallest value which
results in a frequency resolution of \if{html}{\out{<freq>}} Hz or better (default: 40.0)}

\item{fftLength}{= \if{html}{\out{<num>}}: set FFT length to \if{html}{\out{<num>}} points (overrules default
and 'resolution' option)}

\item{windowShift}{= \if{html}{\out{<dur>}}: set analysis window shift to \if{html}{\out{<dur>}} ms
(default: 5.0)}

\item{window}{= \if{html}{\out{<type>}}: set analysis window function to \if{html}{\out{<type>}} (default:
BLACKMAN)}

\item{bandwidth}{= \if{html}{\out{<freq>}}: set the effective analysis bandwidth to \if{html}{\out{<freq>}}
Hz (default: 0, yielding the smallest possible value given the length of
the FFT)}

\item{toFile}{write results to file (default extension depends on )}

\item{explicitExt}{set if you wish to override the default extension}

\item{outputDirectory}{directory in which output files are stored. Defaults to NULL, i.e.
the directory of the input files}

\item{forceToLog}{is set by the global package variable useWrasspLogger. This is set
to FALSE by default and should be set to TRUE is logging is desired.}

\item{verbose}{display infos & show progress bar}
}
\value{
nrOfProcessedFiles or if only one file to process return
AsspDataObj of that file
}
\description{
DFT spectrum function adapted from libassp
}
\details{
Short-term spectral analysis of the signal in \if{html}{\out{<listOfFiles>}}
using the Fast Fourier Transform. The default is to
calculate an unsmoothed narrow-band spectrum with the
size of the analysis window equal to the length of the
FFT. The output from the FFT will be converted to a
power spectrum in dB from 0 Hz up to and including the
Nyquist rate.
Analysis results will be written to a file with the
base name of the input file and the spectrum type in
lower case as extension (e.g. '.dft').
Default output is in SSFF format with the
spectrum type in lower case as track name.
}
\examples{
# get path to audio file
path2wav <- list.files(system.file("extdata", package = "wrassp"), 
                       pattern = glob2rx("*.wav"), 
                       full.names = TRUE)[1]

# calculate dft spectrum
res <- dftSpectrum(path2wav, toFile=FALSE)

# plot spectral values at midpoint of signal
plot(res$dft[dim(res$dft)[1]/2,], 
     type='l', 
     xlab='spectral value index', 
     ylab='spectral value')
     
}
\seealso{
\code{\link{cssSpectrum}}, \code{\link{lpsSpectrum}}, \code{\link{cepstrum}};
all derived from libassp's spectrum function.

\link[wrassp:dftSpectrum]{wrassp::dftSpectrum}
}
\author{
Raphael Winkelmann

Lasse Bombien
}
