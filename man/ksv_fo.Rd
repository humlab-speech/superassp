% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wrassp_ksvF0.R
\name{ksv_fo}
\alias{ksv_fo}
\alias{fo_ana}
\alias{ksvfo}
\title{Finds the f0 using the K.Schaefer-Vincent periodicity detection algorithm}
\usage{
ksv_fo(
  listOfFiles = NULL,
  beginTime = 0,
  endTime = 0,
  windowShift = 5,
  gender = "u",
  maxF = 600,
  minF = 50,
  minAmp = 50,
  maxZCR = 3000,
  toFile = TRUE,
  explicitExt = "fo",
  outputDirectory = NULL,
  assertLossless = NULL,
  logToFile = FALSE,
  convertOverwrites = FALSE,
  keepConverted = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{listOfFiles}{vector of file paths to be processed by function}

\item{beginTime}{the time point (in seconds) of the start of the analysed
interval. A NULL or 0 is interpreted as the start of the signal file.
If a vector of time points is supplied, the length of that vector needs
to correspond with the length of \code{listOfFiles}.}

\item{endTime}{the time point (in seconds) of the end of the analysed
interval. A NULL or 0 is interpreted as the end of the signal file.
If a vector of time points is supplied, the length of that vector needs
to correspond with the length of \code{listOfFiles}.}

\item{windowShift}{the amount of time (in ms) that the analysis window will
be shifted between analysis frames}

\item{gender}{= \if{html}{\out{<code>}}  set gender-specific f~o~ ranges; \if{html}{\out{<code>}} may be:
"f\link{emale}" (80.0 - 640.0 Hz)
"m\link{ale}" (50.0 - 400.0 Hz)
"u\link{nknown}" (default; 50.0 - 600.0 Hz)}

\item{maxF}{= \if{html}{\out{<freq>}}: set maximum F0 value to \if{html}{\out{<freq>}} Hz (default: 500.0)}

\item{minF}{= \if{html}{\out{<freq>}}: set minimum F0 value to \if{html}{\out{<freq>}} Hz (default: 50.0)}

\item{minAmp}{= \if{html}{\out{<amp>}}: set amplitude threshold for voiced samples to \if{html}{\out{<amp>}} (default: 100)}

\item{maxZCR}{maximum zero crossing rate in Hz (for voicing detection)}

\item{toFile}{Should the function write the results to a file, with the
(default) file extension \emph{.acf} (\code{TRUE}) or returned as a list of
\link{AsspDataObj} objects (\code{FALSE})?}

\item{explicitExt}{by default an \emph{.acf} file extension will be used when
result files are written (\code{toFile=TRUE}), but the file extension can be
set to something else using this function argument.}

\item{outputDirectory}{directory in which output files are stored. Defaults
to NULL which means that the result file will be stored in the same
directory as the input file.}

\item{assertLossless}{an optional list of file extensions that the user wants to assert
contains losslessly encoded signals data.}

\item{logToFile}{whether to log commands to a separate logfile in the
\code{outputDirectory}. Logging will otherwise be in the \code{acfana} logging
namespace of \link{logger} and will be put wherever this namespace is defined to place its output.
See \link[logger:log_appender]{logger::log_appender} for details.}

\item{verbose}{display verbose information about processing steps taken, as
well as progress bars.}
}
\value{
nrOfProcessedFiles or if only one file to process return AsspDataObj of that file
}
\description{
Applies Schäefer-Vincent periodicity analysis to find f~o~
\insertCite{Schäfer-Vincent.1983.10.1159/000261691}{superassp} on
signals listed in \code{listOfFiles}. Input signals not in a file format natively
supported will be converted before the autocorrelation functions are
computed. The conversion process will display warnings about input files
that are not in known losslessly encoded formats.
}
\details{
The results will be will be written to an SSFF formated file with the base
name of the input file and extension \emph{.fo} in a track \emph{fo}.

The function is a re-write of the \link[wrassp:acfana]{wrassp::acfana} function, but
with media pre-conversion, better checking of preconditions such as the
input file existance, structured logging, and the use of a more modern
framework for user feedback.

Optionally, location and type of the signal extrema on
which the F0 data are based, may be stored in a label
file. The name of this file will consist of the base
name of the f~o~ file and the extension '.prd'.

The native file type of this function is "wav" files (in "pcm_s16le"
format), SUNs "au", NIST, or CSL formats (kay or NSP extension). Input
signal conversion, when needed, is done by
\href{https://ffmpeg.org/libavcodec.html}{libavcodec} and the excellent \link[av:encoding]{av::av_audio_convert}
wrapper function
}
\note{
This function is not considered computationally expensive enough to require caching of
results if applied to many signals. However, if the number of signals it will be applied to
is \emph{very} long, then caching of results may be warranted.
}
\examples{
# get path to audio file
path2wav <- list.files(system.file("extdata", package = "wrassp"), 
                       pattern = glob2rx("*.wav"), 
                       full.names = TRUE)[1]

# calculate fundamental frequency contour
res <- ksv_fo(path2wav, toFile=FALSE)

# plot the fundamental frequency contour
plot(seq(0,numRecs.AsspDataObj(res) - 1) / rate.AsspDataObj(res) +
       attr(res, 'startTime'),
     res$fo, 
     type='l', 
     xlab='time (s)', 
     ylab='F0 frequency (Hz)')
     
}
\references{
\insertAllCited{}
}
\author{
Raphael Winkelmann

Lasse Bombien

Fredrik Nylén
}
