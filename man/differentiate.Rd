% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ssff.R
\name{differentiate}
\alias{differentiate}
\title{Derivation of SSFF track objects}
\usage{
differentiate(
  inSSFF,
  order = 1,
  onlyTracks = NULL,
  padLeft = TRUE,
  toFile = TRUE,
  explicitExt = NULL,
  overwrite = FALSE
)
}
\arguments{
\item{inSSFF}{The SSFF object, or a full path to a file that contains an SSFF object and may be read as such by \link{read.AsspDataObj}.}

\item{order}{The number of iterations in which the vector will be differentiated. The first order differentiation gives the size of changes in consecutive values (with an indicated lag). The second order differentiation gives the rate of change, and so on.}

\item{onlyTracks}{Only differentiate certain tracks, and leave the others as is. Defaults to process all tracks.}

\item{padLeft}{Should initial zeros be inserted into the vector from the left?}

\item{toFile}{Should the resulting SSFF object be written to file, or returned?}

\item{explicitExt}{By default, a character "d" will be prepended to the file name suffix when writing the output to file. The user can also specify an explicit extension which will be used instead.}

\item{overwrite}{Should an existing file be overwritten when writing the output?}
}
\value{
The function will return an SSFF object if \code{toFile} is \code{TRUE}. Otherwise, nothing is returned.
}
\description{
This function takes an SSFF object or file and computes the \code{order}th derivative of the tracks in it. The user may also specify a lag of differentiation. If \code{lag=1}, then ordinary differences between consecutive values are computed. If \code{lag=2}, then the difference between the 1st and 3rd value will be returned, and so on. The user may specify an order of differentiation too, and thereby cause the differentiation to be conducted in multiple iterations.
}
\details{
Differentiation always results in loss of data, and the user may specify how to align the differentiation output. Initial zero padding values will be inserted so that the vector length of the input and the output will always be the same. If \code{padLeft=TRUE} (the default) the initial zero values will be inserted into the tracks so that the differentiation result aligns in time with the occurrence of a value change. That is, if \code{lag=2} a value in the output vector indicates that at that place in the input vector a change has happened of the indicated size compared to the value two positions back in the vector. If \code{padLeft=FALSE} and \code{lag=2} then the value indicates the change that will have occurred when looking two positions forward in the vector. This is likely an unusual use case, and therefore not the default behavior.

Padding the signal with zeros is performed after all iterations of differentiation have been performed completely, and the padding zeros will therefore never be differentiated themselves.
}
