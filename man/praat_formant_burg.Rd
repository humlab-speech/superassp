% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/praat_ssff.R
\name{praat_formant_burg}
\alias{praat_formant_burg}
\title{Formant estimation using the Praat burg algorithm implementation}
\usage{
praat_formant_burg(
  listOfFiles,
  beginTime = 0,
  endTime = 0,
  windowShift = 5,
  numFormants = 5,
  maxhzformant = 5500,
  windowSize = 30,
  preemphasis = 50,
  windowShape = "Gaussian1",
  relativeWidth = 1,
  spectWindowShape = "Gaussian",
  spectResolution = 40,
  toFile = TRUE,
  explicitExt = "pfm",
  outputDirectory = NULL,
  verbose = FALSE,
  praat_path = NULL
)
}
\arguments{
\item{listOfFiles}{a vector of wav file paths to be processed by function.}

\item{beginTime}{the time where processing should end (in s) The default is 0 (zero) which means that the computation of formants will start at the start of the sound file.}

\item{endTime}{the time where processing should end (in s) The default is 0 (zero) which means that formants will be computed up to the end of the file.}

\item{windowShift}{the analysis window shift length (in ms).}

\item{numFormants}{the number of formants that the analysis should try to find}

\item{maxhzformant}{praat will try to find formants only up to this frequency in the spectrum.}

\item{windowSize}{the analysis window length (in ms).}

\item{preemphasis}{the frequency from which a preemphasis will be applied..}

\item{windowShape}{the analysis window function used when extracting part of a sound file for analysis. De faults to "Hanning".}

\item{relativeWidth}{the relative width of the windowing function used.}

\item{spectWindowShape}{The shape of the windowing function used for constructing the spectrogram.}

\item{spectResolution}{The frequency resolution of the spectrogram from which formant intensities will be collected.}

\item{toFile}{write the output to a file? The file will be written in  \code{outputDirectory}, if defined, or in the same directory as the soundfile.}

\item{explicitExt}{the file extension that should be used.}

\item{outputDirectory}{set an explicit directory for where the signal file will be written. If not defined, the file will be written to the same directory as the sound file.}

\item{verbose}{Not implemented. Only included here for compatibility.}

\item{praat_path}{give an explicit path for Praat. If the praat}
}
\value{
The number of processed files, or an SSFF track data object (if \code{toFile=FALSE}) containing three fields ("F", "B" and "L") containing formant frequencies, bandwidth and intensities.
}
\description{
Formants are estimated using Praat's built in function (burg algorithm). The function also computes the intensity (L) of the formant based on the power of the spectrum at the frequency of the formant. Naturally, if the algorithm failed to find a formant in a specified time frame, then the function will not return a formant frequency, bandwidth and intensity estimation.
}
\details{
If the user only want to estimate formant frequencies, computing them using the function \link[wrassp:forest]{wrassp::forest} is \emph{much} quicker, and the user should therefore mainly consider using this function \code{praat_formant_burg} only if the use case specicifally demands the use of the burg algorithm for computing formants, or if the user wants to also study the formant intensity levels (L_n) which  \link[wrassp:forest]{wrassp::forest} does not do.

\code{\link{have_praat}} functions.
}
